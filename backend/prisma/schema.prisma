generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id          String  @id @default(cuid())
  firstName   String
  lastName    String
  email       String
  password    String 
  phone       String
  id_role     String 
  image_url   String
  role        Role    @relation(fields: [id_role], references: [id])
  orders      Order[]
  sales Sale[]
}

model Role {
  id    String @id @default(cuid())
  name  String
  users User[]
  role_permission Role_Permissions[]
}

model Category {
  id       String   @id @default(cuid())
  name     String
  created_on DateTime @default(now())
  products Product[]

}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  created_on  DateTime 
  added_date DateTime @default(now())
  price       Decimal  @db.Decimal(10, 2)
  quantity    Int
  expired_date DateTime  
  expiry_quantity Int 
  id_category String
  id_brand String 
  category    Category @relation(fields: [id_category], references: [id])
  orders      Order_Product[]
  images      Image[]
  brand  Brand @relation(fields:[id_brand],references:[id])
  sales Sale_Product[]
}

model Status {
  id    String @id @default(cuid())
  name  String
  orders Order[]
  sales Sale[]
}

model Order {
  id         String @id @default(cuid())
  order_date DateTime  @default(now()) @db.Date
  id_status  String
  id_user    String
  user       User   @relation(fields: [id_user], references: [id])
  status     Status @relation(fields: [id_status], references: [id])
  products   Order_Product[]
}

model Order_Product {
  id_order   String
  id_product String
  quantity   Int
  order      Order   @relation(fields: [id_order], references: [id])
  product    Product @relation(fields: [id_product], references: [id])

  @@id([id_order, id_product])
}

model Image {
  id         String @id @default(cuid())
  url        String
  id_product String 
  product    Product @relation(fields: [id_product], references: [id])
}

model Brand {
  id         String   @id @default(cuid())
  name       String 
  created_on DateTime @default(now()) @db.Date
  product Product[]
}
model Permission{
  id String @id @default(cuid())
  name String 
  role_permission Role_Permissions[]
}
model Role_Permissions{
  id_role String 
  id_permission String 
  role Role @relation(fields:[id_role],references:[id])
  permission Permission @relation(fields:[id_permission],references:[id])
  @@id([id_role,id_permission])
}
model Sale {
  id         String @id @default(cuid())
  sale_date DateTime  @default(now()) @db.Date
  id_status  String
  id_user    String
  user       User   @relation(fields: [id_user], references: [id])
  status     Status @relation(fields: [id_status], references: [id])
  products   Sale_Product[]

}
model Sale_Product {
  id_product   String
  id_sale String
  quantity   Int
  sale     Sale  @relation(fields: [id_sale], references: [id])
  product    Product @relation(fields: [id_product], references: [id])

  @@id([id_product, id_sale])
}